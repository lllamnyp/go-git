stages:
  - build
  - dockerize
  - deploy

variables:
  CI_REGISTRY: registry.do.x5.ru
  CONTAINER_IMAGE: registry.do.x5.ru/devops/go-git
  CONTAINER_IMAGE_BUILT: ${CONTAINER_IMAGE}:latest
  CONTAINER_IMAGE_LATEST: ${CONTAINER_IMAGE}:latest
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375  # required since we use dind

build:
  stage: build
  image: golang:1.12.5
  artifacts:
    paths:
      - go-git
  tags:
    - k8s-testlab
#   before_script:
#     - update-ca-certificates
#     - |
#       keytool -import \
#             -trustcacerts \
#             -keystore $JAVA_HOME/jre/lib/security/cacerts \
#             -storepass changeit \
#             -alias Root \
#             -file /usr/local/share/ca-certificates/pa.x5.ru.crt \
#             -noprompt -v
  script:
    - go get -d -v ./...
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /go/bin/go-git .
    - mv /go/bin/go-git .
#  when: manual

dockerize:
  stage: dockerize
  image: docker:stable
  services:
    - name: docker:dind
      entrypoint:
        - /bin/sh
      command:
        - -c
        - update-ca-certificates && dockerd-entrypoint.sh
  tags:
    - k8s-testlab
  script:
    - echo "Building Dockerfile-based application ${CONTAINER_IMAGE}..."
    - echo ${CONTAINER_IMAGE_BUILT}
    - "update-ca-certificates"
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t ${CONTAINER_IMAGE_BUILT} .
    - echo "Pushing to the Container Registry..."
    - docker push ${CONTAINER_IMAGE_BUILT}
#  when: manual

deploy:
  stage: deploy
  image: registry.do.x5.ru/shared/base-image:latest
  tags:
    - k8s-testlab
  script:
    - mkdir -p /root/.kube
    - echo "${K8S_CONFIG}" | base64 -d > /root/.kube/config
    - kubectl apply -f deployment.yml -n test-nginx
    - kubectl apply -f ingress.yml -n test-nginx
    - kubectl apply -f service.yml -n test-nginx
#    - kubectl apply -f configmap.yml -n test-nginx
#   only:
#     - master
  when: manual
